name: Build and Test

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '21 2 * * 1-5' # every weekday at 2:21 AM UTC

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - name: rust-toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Config cargo
        run: echo -e "$CARGO_CONFIG_TOML" > .cargo/config.toml
        env:
          CARGO_CONFIG_TOML: ${{ secrets.CARGO_CONFIG_TOML }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: make test
  build-ios:
    name: Build for iOS targets
    runs-on: macos-latest
    strategy:
      matrix:
        target: [ x86_64-apple-ios, aarch64-apple-ios, aarch64-apple-ios-sim ]
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Config cargo
        run: echo -e "$CARGO_CONFIG_TOML" > .cargo/config.toml
        env:
          CARGO_CONFIG_TOML: ${{ secrets.CARGO_CONFIG_TOML }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --target ${{ matrix.target }}
  build-android:
    name: Build for Android targets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ aarch64-linux-android, armv7-linux-androideabi, i686-linux-android ]
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.65.0
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Config cargo
        run: echo -e "$CARGO_CONFIG_TOML" > .cargo/config.toml
        env:
          CARGO_CONFIG_TOML: ${{ secrets.CARGO_CONFIG_TOML }}
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.0
      - name: Install Cross
        run: cargo install cross --locked
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
