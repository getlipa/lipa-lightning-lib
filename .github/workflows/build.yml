name: Build and Test

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - '**'
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  # Skip this GitHub Action if a previous run has already been triggered by another event
  pre_job:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'
  build:
    name: Build and test
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: rust-toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test --lib --verbose
  build-ios:
    name: Build for iOS targets
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: macos-latest
    strategy:
      matrix:
        target: [ x86_64-apple-ios, aarch64-apple-ios, aarch64-apple-ios-sim ]
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Cross
        run: cargo install cross --locked
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target }}
  build-android:
    name: Build for Android targets
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ aarch64-linux-android, armv7-linux-androideabi, i686-linux-android ]
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Cross
        run: cargo install cross --locked
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.target }}
