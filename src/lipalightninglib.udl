enum Network {
    "Bitcoin",
    "Testnet",
    "Signet",
    "Regtest",
};

dictionary Config {
    Network network;
    sequence<u8> seed;
};

callback interface RedundantStorageCallback {
    boolean object_exists(string bucket, string key);
    sequence<u8> get_object(string bucket, string key);
    boolean check_health(string bucket);
    boolean put_object(string bucket, string key, sequence<u8> value);
    sequence<string> list_objects(string bucket);
};

[Error]
enum InitializationError {
    "KeysManager",
    "SecretGeneration",
    "AsyncRuntime",
};

interface LightningNode {
    [Throws=InitializationError]
    constructor(Config config, RedundantStorageCallback redundant_storage_callback);
};

enum LogLevel {
    "Error",
    "Warn",
    "Info",
    "Debug",
    "Trace",
};

dictionary Secret {
    sequence<string> mnemonic;
    string passphrase;
    sequence<u8> seed;
};

namespace lipalightninglib {
    void init_native_logger_once(LogLevel min_level);
    [Throws=InitializationError]
    Secret generate_secret(string passphrase);
    // TODO: Implement.
    // sequence<u8> mnemonic_to_seed(sequence<string> mnemonic, string passphrase);
};
